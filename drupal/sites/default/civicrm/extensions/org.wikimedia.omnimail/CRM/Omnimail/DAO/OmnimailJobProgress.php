<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from org.wikimedia.omnimail/xml/schema/CRM/Omnimail/OmnimailJobProgress.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:c870baaaf4d248138f6314b1c2294605)
 */
use CRM_Omnimail_ExtensionUtil as E;

/**
 * Database access object for the OmnimailJobProgress entity.
 */
class CRM_Omnimail_DAO_OmnimailJobProgress extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_omnimail_job_progress';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = FALSE;

  /**
   * Unique OmnimailJobProgress ID
   *
   * @var int
   */
  public $id;

  /**
   * Mailing provider name
   *
   * @var string
   */
  public $mailing_provider;

  /**
   * job name
   *
   * @var string
   */
  public $job;

  /**
   * optional suffix to disambiguate the job
   *
   * @var string
   */
  public $job_identifier;

  /**
   * Mailing provider name
   *
   * @var timestamp
   */
  public $last_timestamp;

  /**
   * End timestamp of current retrieval
   *
   * @var timestamp
   */
  public $progress_end_timestamp;

  /**
   * json copy of any paramters that need to be passed to the provider.
   *
   * @var string
   */
  public $retrieval_parameters;

  /**
   * How many lines have been processed
   *
   * @var int
   */
  public $offset;

  /**
   * When was the job created
   *
   * @var timestamp
   */
  public $created_date;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_omnimail_job_progress';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Omnimail Job Progresses') : E::ts('Omnimail Job Progress');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => E::ts('Unique OmnimailJobProgress ID'),
          'required' => TRUE,
          'where' => 'civicrm_omnimail_job_progress.id',
          'table_name' => 'civicrm_omnimail_job_progress',
          'entity' => 'OmnimailJobProgress',
          'bao' => 'CRM_Omnimail_DAO_OmnimailJobProgress',
          'localizable' => 0,
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'mailing_provider' => [
          'name' => 'mailing_provider',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Mailing Provider'),
          'description' => E::ts('Mailing provider name'),
          'maxlength' => 512,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_omnimail_job_progress.mailing_provider',
          'table_name' => 'civicrm_omnimail_job_progress',
          'entity' => 'OmnimailJobProgress',
          'bao' => 'CRM_Omnimail_DAO_OmnimailJobProgress',
          'localizable' => 0,
          'add' => NULL,
        ],
        'job' => [
          'name' => 'job',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Job'),
          'description' => E::ts('job name'),
          'maxlength' => 32,
          'size' => CRM_Utils_Type::MEDIUM,
          'where' => 'civicrm_omnimail_job_progress.job',
          'table_name' => 'civicrm_omnimail_job_progress',
          'entity' => 'OmnimailJobProgress',
          'bao' => 'CRM_Omnimail_DAO_OmnimailJobProgress',
          'localizable' => 0,
          'add' => NULL,
        ],
        'job_identifier' => [
          'name' => 'job_identifier',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Job Identifier'),
          'description' => E::ts('optional suffix to disambiguate the job'),
          'maxlength' => 512,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_omnimail_job_progress.job_identifier',
          'table_name' => 'civicrm_omnimail_job_progress',
          'entity' => 'OmnimailJobProgress',
          'bao' => 'CRM_Omnimail_DAO_OmnimailJobProgress',
          'localizable' => 0,
          'add' => NULL,
        ],
        'last_timestamp' => [
          'name' => 'last_timestamp',
          'type' => CRM_Utils_Type::T_TIMESTAMP,
          'title' => E::ts('Last Timestamp'),
          'description' => E::ts('Mailing provider name'),
          'where' => 'civicrm_omnimail_job_progress.last_timestamp',
          'table_name' => 'civicrm_omnimail_job_progress',
          'entity' => 'OmnimailJobProgress',
          'bao' => 'CRM_Omnimail_DAO_OmnimailJobProgress',
          'localizable' => 0,
          'add' => NULL,
        ],
        'progress_end_timestamp' => [
          'name' => 'progress_end_timestamp',
          'type' => CRM_Utils_Type::T_TIMESTAMP,
          'title' => E::ts('Progress End Timestamp'),
          'description' => E::ts('End timestamp of current retrieval'),
          'where' => 'civicrm_omnimail_job_progress.progress_end_timestamp',
          'table_name' => 'civicrm_omnimail_job_progress',
          'entity' => 'OmnimailJobProgress',
          'bao' => 'CRM_Omnimail_DAO_OmnimailJobProgress',
          'localizable' => 0,
          'add' => NULL,
        ],
        'retrieval_parameters' => [
          'name' => 'retrieval_parameters',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Retrieval Parameters'),
          'description' => E::ts('json copy of any paramters that need to be passed to the provider.'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_omnimail_job_progress.retrieval_parameters',
          'table_name' => 'civicrm_omnimail_job_progress',
          'entity' => 'OmnimailJobProgress',
          'bao' => 'CRM_Omnimail_DAO_OmnimailJobProgress',
          'localizable' => 0,
          'add' => NULL,
        ],
        'offset' => [
          'name' => 'offset',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Offset'),
          'description' => E::ts('How many lines have been processed'),
          'where' => 'civicrm_omnimail_job_progress.offset',
          'table_name' => 'civicrm_omnimail_job_progress',
          'entity' => 'OmnimailJobProgress',
          'bao' => 'CRM_Omnimail_DAO_OmnimailJobProgress',
          'localizable' => 0,
          'add' => NULL,
        ],
        'created_date' => [
          'name' => 'created_date',
          'type' => CRM_Utils_Type::T_TIMESTAMP,
          'title' => E::ts('Created Date'),
          'description' => E::ts('When was the job created'),
          'where' => 'civicrm_omnimail_job_progress.created_date',
          'table_name' => 'civicrm_omnimail_job_progress',
          'entity' => 'OmnimailJobProgress',
          'bao' => 'CRM_Omnimail_DAO_OmnimailJobProgress',
          'localizable' => 0,
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'omnimail_job_progress', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'omnimail_job_progress', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
