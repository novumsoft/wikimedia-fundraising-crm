<?php

use wmf_communication\Mailer;
use wmf_communication\Templating;

/**
 * Implementation of hook_menu().
 */
function large_donation_menu() {

  $items = array();

  $items['admin/config/large_donation'] = array(
    'title' => 'Large Donation Processor',
    'access arguments' => array('administer large_donation'),
    'page callback' => 'system_admin_menu_block_page',
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/large_donation/configure'] = array(
    'title' => 'Configure',
    'description' => 'Configure large donation settings.',
    'access arguments' => array('administer large_donation'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('large_donation_settings'),
  );

  return $items;
}

/**
 * Implementation of hook_permission().
 */
function large_donation_permission() {
  return array(
    'administer large_donation' => array(
      'title' => t('Administer Large Donations'),
    ),
  );
}

/**
 * Callback for menu path "admin/config/large_donation".
 */
function large_donation_settings() {
  $form = array();

  $form['large_donation_notifymail'] = array(
    '#type' => 'textarea',
    '#title' => t('Email Notification Addresses'),
    '#required' => FALSE,
    '#default_value' => variable_get('large_donation_notifymail', ''),
    '#description' => t('Addresses, separated by commas or newlines, to be notified on large contributions.'),
  );

  $form['large_donation_amount'] = array(
    '#type' => 'textfield',
    '#title' => t('Large donation value'),
    '#required' => TRUE,
    '#default_value' => variable_get('large_donation_amount', 1000),
    '#description' => t('Donations over this amount (USD) will trigger an email.'),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_civicrm_post
 */
function large_donation_civicrm_post( $action, $type, $id, &$contribution ) {
    switch ( $action ) {
    case 'create':
        if ( $type === 'Contribution' ) {
            $large_donation_amount = floatval( variable_get( 'large_donation_amount', 0.00 ) );

            if ( $contribution->total_amount >= $large_donation_amount ) {
                watchdog( 'large_donation', "Notifying of large donation, contribution: {$contribution->id}" );

                large_donation_notification_send( $contribution );
            } else {
                watchdog('large_donation', "Donation amount {$contribution->total_amount} was not above the threshold [{$large_donation_amount}]");
            }
        }
        break;
    default:
    }
}

/**
 * large_donation_notification
 *
 * The email should include the total amount, source amount, contact and
 * contribution ids, and a link to the contact/contribution.
 *
 * No personally identifiable information should be included.
 *
 * @param array $contribution
 */
function large_donation_notification_send( $contribution ) {
    $contribution_link = CRM_Utils_System::url(
        'civicrm/contact/view',
        array(
            'selectedChild' => 'contribute',
            'cid' => $contribution->contact_id,
            'reset' => 1,
        ),
        true,
        'Contributions'
    );

    $to = variable_get('large_donation_notifymail', '');

    $params = array(
        'threshold' => floatval( variable_get( 'large_donation_amount', 0.00 ) ),
        'contribution' => $contribution,
        'contribution_link' => $contribution_link,
    );

    if ( !$to ) {
        watchdog( 'large_donation', 'Notification recipient address is not set up!', NULL, WATCHDOG_ERROR );
        return;
    }

    $mailer = Mailer::getDefault();

    $template = new Templating( __DIR__ . '/templates', 'notification', 'en', $params, 'html' );
    $message = $template->render();

    try {
        $email = array(
            'to' => preg_split( '/\\s*[,\\n]\\s*/', $to, -1, PREG_SPLIT_NO_EMPTY ),
            'from_address' => 'fr-tech+large_donation@wikimedia.org',
            'from_name' => 'Large Donation Bot',
            'subject' => "WMF - large donation: \${$contribution->total_amount}",
            'html' => $message,
        );
        $mailer->send( $email );

        $email_success = true;
    } catch ( Exception $e ) {
        watchdog('large_donation', 'Sending large donation message failed for contribution: ' . $contribution_id . '<pre>' . check_plain(print_r($contribution, TRUE)) . "\n\n" . $e->getMessage() . '</pre>', array(), WATCHDOG_ERROR);
    }

    if ( $email_success ) {
        watchdog('large_donation', 'A large donation notification was sent to: ' . $to);
    }
}
