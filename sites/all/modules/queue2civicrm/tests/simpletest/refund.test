<?php

require_once __DIR__ . '/BaseTestCase.php';
require_once __DIR__ . '/../includes/Message.php';

class RefundTest extends BaseTestCase {
    public function setUp() {
        parent::setUp();

        $this->payment_message = new TransactionMessage();
        $this->parent_txn_id = WmfTransaction::from_message( $this->payment_message->getBody() )->gateway_txn_id;

        $payment_data = $this->payment_message->getBody();
        $this->refund_message = new RefundMessage( array(
            'gateway_parent_id' => $this->parent_txn_id,
            'gross' => $payment_data['gross'],
            'gross_currency' => $payment_data['currency'],
        ) );
    }

    public static function getInfo() {
        return array(
            'name' => 'Refund message',
            'group' => 'Donations Pipeline',
            'description' => 'Process a refund message',
        );
    }

    public function testImportRefund() {
        $refund_data = $this->refund_message->getBody();

// FIXME 2: and yeah, decouple this as well
        queue2civicrm_import( $this->payment_message );
// FIXME 1: decouple refund_qc test from mark_refund test
        refund_import( $this->refund_message );

        $parent_contributions = wmf_civicrm_get_contributions_from_gateway_id( $refund_data['gateway'], $this->parent_txn_id );
        $this->assertTrue( $parent_contributions,
            "Found parent contribution." );
        $this->assertSuperset( $parent_contributions, array(
            array(
                'gateway' => $refund_data['gateway'],
                'gateway_txn_id' => (string) $refund_data['gateway_parent_id'],
                'finance_only' => "1",
            ),
        ) );

        $contributions = wmf_civicrm_get_contributions_from_gateway_id( $refund_data['gateway'], $refund_data['gateway_refund_id'] );
        $this->assertTrue( $contributions,
            "Found refund contribution." );
        $this->assertSuperset( $contributions, array(
            array(
                'gateway' => $refund_data['gateway'],
                'gateway_txn_id' => (string) $refund_data['gateway_refund_id'],
                'finance_only' => "1",
                'total_amount' => (string)(0 - $parent_contributions[0]['total_amount']),
                'no_thank_you' => "refund",
            ),
        ) );
    }
}
